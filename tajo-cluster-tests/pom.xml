<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>tajo-project</artifactId>
    <groupId>org.apache.tajo</groupId>
    <version>0.12.0-SNAPSHOT</version>
    <relativePath>../tajo-project</relativePath>
  </parent>
  <artifactId>tajo-cluster-tests</artifactId>
  <packaging>jar</packaging>
  <name>Tajo Cluster Tests</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>benchmark/**</exclude>
            <exclude>src/test/resources/tpch/**</exclude>
            <exclude>derby.log</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <tajo.test.enabled>true</tajo.test.enabled>
          </systemProperties>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <excludes>
            <exclude>LICENSE</exclude>
          </excludes>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-algebra</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-catalog-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-plan</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-catalog-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-catalog-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-storage-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-storage-hdfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-storage-hbase</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-pullserver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-rpc-protobuf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-thirdparty-asm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-ws-rs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tajo</groupId>
      <artifactId>tajo-metrics</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-minicluster</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-el</groupId>
          <artifactId>commons-el</artifactId>
        </exclusion>
        <exclusion>
          <groupId>tomcat</groupId>
          <artifactId>jasper-runtime</artifactId>
        </exclusion>
        <exclusion>
          <groupId>tomcat</groupId>
          <artifactId>jasper-compiler</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-2.1-jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey.jersey-test-framework</groupId>
          <artifactId>jersey-test-framework-grizzly2</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>netty-all</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-el</groupId>
          <artifactId>commons-el</artifactId>
        </exclusion>
        <exclusion>
          <groupId>tomcat</groupId>
          <artifactId>jasper-runtime</artifactId>
        </exclusion>
        <exclusion>
          <groupId>tomcat</groupId>
          <artifactId>jasper-compiler</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-2.1-jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey.jersey-test-framework</groupId>
          <artifactId>jersey-test-framework-grizzly2</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>netty-all</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-common</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-common</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>netty-all</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>netty-all</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop-compat</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop2-compat</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jdk.tools</artifactId>
          <groupId>jdk.tools</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <profiles>
    <!-- jacocoProfile -->
    <profile>
      <id>jacocoProfile</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- ba-dua profile-->
    <profile>
      <id>baduaProfile</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <!-- Use a stable version instead of SNAPSHOT one -->
        <ba-dua.version>0.6.0</ba-dua.version>
        <argLine>-javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar
          -Doutput.file=target/badua.ser
        </argLine>
      </properties>
      <!-- Needed to generate the report-->
      <dependencies>
        <dependency>
          <groupId>br.usp.each.saeg</groupId>
          <artifactId>ba-dua-cli</artifactId>
          <version>${ba-dua.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
         <!-- Copy ba-dua-agent-rt from .m2 directory to target/dependency -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>br.usp.each.saeg</groupId>
                      <artifactId>ba-dua-agent-rt</artifactId>
                      <classifier>all</classifier>
                      <version>${ba-dua.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

        <!-- Generate report in xml format -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                  <arguments>
                    <argument>-input</argument>
                    <argument>${project.build.directory}/badua.ser</argument>
                    <argument>-classes</argument>
                    <argument>${project.build.outputDirectory}</argument>
                    <argument>-show-classes</argument>
                    <argument>-show-methods</argument>
                    <argument>-xml</argument>
                    <argument>${project.build.directory}/badua.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- pitProfile -->
    <profile>
      <id>pitProfile</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest-maven-plugin.version}</version>
            <configuration>

              <targetClasses>
                <param>org.apache.tajo2.client.CatalogAdminClientImpl</param>
                <param>org.apache.tajo2.client.QueryClientImpl</param>
              </targetClasses>
              <targetTests>
                <param>org.apache.tajo2.client.CreateDatabaseTest</param>
                <param>org.apache.tajo2.client.DropDatabaseTest</param>
                <param>org.apache.tajo2.client.ExistsDatabaseTest</param>
                <param>org.apache.tajo2.client.ExecuteQueryResultTest</param>
                <param>org.apache.tajo2.client.GetQueryStatusTest</param>
                <param>org.apache.tajo2.client.ExecuteQueryTest</param>
              </targetTests>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


  </profiles>

</project>
